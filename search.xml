<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Ngxin中相关配置的说明</title>
      <link href="/2019/03/01/Nginx%E4%B8%AD%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE%E9%A1%B9%E7%9A%84%E8%AF%B4%E6%98%8E/"/>
      <url>/2019/03/01/Nginx%E4%B8%AD%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE%E9%A1%B9%E7%9A%84%E8%AF%B4%E6%98%8E/</url>
      
        <content type="html"><![CDATA[<p>以下是对Nginx相关的说明，可能包含文件目录和文件中内容相关的解读</p><h2 id="Nginx安装目录的解读"><a href="#Nginx安装目录的解读" class="headerlink" title="Nginx安装目录的解读"></a>Nginx安装目录的解读</h2><table><thead><tr><th>路径</th><th style="text-align:center">类型</th><th style="text-align:center">作用</th></tr></thead><tbody><tr><td>/etcy/logrotate.d/nginx</td><td style="text-align:center">配置文件</td><td style="text-align:center">Nginx日志轮转,用于\logrotate服务的日志切割</td></tr><tr><td>/etc/nginx <br> /etc/nginx/nginx.conf     <br>  /etc/nginx/confd /etc/nginx/xonfd/default.conf</td><td style="text-align:center">目录与配置文件</td><td style="text-align:center">Nginx 主配置文件</td></tr><tr><td>/etc/nginx/fastcgi_params  <br>  /etc/nginx/uwsgi_params <br>/etc/nginx/scgi_params</td><td style="text-align:center">配置文件</td><td style="text-align:center">cgi配置相关,fastcgi配置</td></tr><tr><td>/etc/nginx/lkoi-utf <br>/etc/nginx/koi-win <br>/etc/nginx/win-utf</td><td style="text-align:center">配置文件</td><td style="text-align:center">编码转换映射转化文件</td></tr><tr><td>/etc/nginx/mime.types</td><td style="text-align:center">配置文件</td><td style="text-align:center">设置http协议的Content- Type与抚展名对应关系</td></tr><tr><td>/usr/lib/systemd/systemy/aginx-debug.service <br>/usr/lib/systemd/systemy/nginx.service <br>/etc/sysconfigy/nginx <br>/etc/sysconfig/nginx-debug</td><td style="text-align:center">配置文件</td><td style="text-align:center">配置用于配置出系统守护进程管文件理器管理方式</td></tr><tr><td>/usr/lib64/nginx/modules <br>/etc/nginx/modules</td><td style="text-align:center">目录</td><td style="text-align:center">Nginx模块目录</td></tr><tr><td>/usr/sbin/nginx     <br>/usr/sbin/nginx-debug</td><td style="text-align:center">命令</td><td style="text-align:center">命令 Nginx服务的启动管理的终端命令</td></tr><tr><td>/usr/share/doc/nginx-1.12.0    <br>/usr/share/doc/nginx-~1.12.80/COPYRIGHT <br>/usr/share/man/man8/hginx.8.gz</td><td style="text-align:center">文件目录</td><td style="text-align:center">Nginx的手册和帮助文档</td></tr><tr><td>/var/cache/nginx</td><td style="text-align:center">目录</td><td style="text-align:center">Nginx的缓存目录</td></tr><tr><td>/var/log/nginx</td><td style="text-align:center">目录</td><td style="text-align:center">Nginx的日志目录</td></tr></tbody></table><p>nginx -v 显示 nginx 的版本。 nginx -V 显示 nginx 的版本,编译器版本和配置参数。如果不想每次都敲命令,可以在 nginx</p><h2 id="Nginx的编译器版本和配置参数"><a href="#Nginx的编译器版本和配置参数" class="headerlink" title="Nginx的编译器版本和配置参数"></a>Nginx的编译器版本和配置参数</h2><p>nginx -V 显示 nginx 的版本,编译器版本和配置参数。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">configure arguments:</span><br><span class="line"> --prefix=/etc/nginx</span><br><span class="line"> --sbin-path=/usr/sbin/nginx</span><br><span class="line"> --modules-path=/usr/lib64/nginx/modules</span><br><span class="line"> --conf-path=/etc/nginx/nginx.conf</span><br><span class="line"> --error-log-path=/var/log/nginx/error.log</span><br><span class="line"> --http-log-path=/var/log/nginx/access.log</span><br><span class="line"> --pid-path=/var/run/nginx.pid</span><br><span class="line"> --lock-path=/var/run/nginx.lock</span><br><span class="line"> --http-client-body-temp-path=/var/cache/nginx/client_temp</span><br><span class="line"> --http-proxy-temp-path=/var/cache/nginx/proxy_temp</span><br><span class="line"> --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp</span><br><span class="line"> --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp</span><br><span class="line"> --http-scgi-temp-path=/var/cache/nginx/scgi_temp</span><br><span class="line"> --user=nginx</span><br><span class="line"> --group=nginx</span><br><span class="line"> --with-compat</span><br><span class="line"> --with-file-aio</span><br><span class="line"> --with-threads</span><br><span class="line"> --with-http_addition_module</span><br><span class="line"> --with-http_auth_request_module</span><br><span class="line"> --with-http_dav_module</span><br><span class="line"> --with-http_flv_module</span><br><span class="line"> --with-http_gunzip_module</span><br><span class="line"> --with-http_gzip_static_module</span><br><span class="line"> --with-http_mp4_module</span><br><span class="line"> --with-http_random_index_module</span><br><span class="line"> --with-http_realip_module</span><br><span class="line"> --with-http_secure_link_module</span><br><span class="line"> --with-http_slice_module</span><br><span class="line"> --with-http_ssl_module</span><br><span class="line"> --with-http_stub_status_module</span><br><span class="line"> --with-http_sub_module</span><br><span class="line"> --with-http_v2_module</span><br><span class="line"> --with-mail</span><br><span class="line"> --with-mail_ssl_module</span><br><span class="line"> --with-stream</span><br><span class="line"> --with-stream_realip_module</span><br><span class="line"> --with-stream_ssl_module</span><br><span class="line"> --with-stream_ssl_preread_module</span><br><span class="line"> --with-cc-opt=&apos;-O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong</span><br><span class="line"> --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -fPIC&apos;</span><br><span class="line"> --with-ld-opt=&apos;-Wl,-z,relro -Wl,-z,now -pie&apos;</span><br></pre></td></tr></table></figure><blockquote><p>有待完善…..</p></blockquote><table><thead><tr><th>编译选项</th><th style="text-align:center">作用</th></tr></thead><tbody><tr><td>–prefix=/etc/nginx<br> –sbin-path=/usr/sbin/nginx<br> –modules-path=/usrylib64/nginx/modules<br> –conf-path=/etc/nginx/nginx.conf<br> –error-log-path=/var/log/nginx/error.log<br> –http-log-path=/var/log/nginx/access.log<br> –pid-paths/var/run/nginx.pid<br> –lock-path=/var/run/nginx.lock<br></td><td style="text-align:center">安装目的目录或路径</td></tr><tr><td>–http-client-body-temp-path=/var/cache/nginx/client_temp<br>  –http-proxy-temp-path=/var/cachey/nginx/proxy_temp<br> –http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp<br> –http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp<br> –http-scgi-temp-path=/var/cache/nginx/scgi_temp</td><td style="text-align:center">执行对应模块时,Nginx所保留的临时性文件</td></tr><tr><td>–uUser=nginx<br> –group=nginx</td><td style="text-align:center">设定Nginx进程启动的用户和组用户</td></tr><tr><td>–with-cc-opt=parameters</td><td style="text-align:center">设置额外的参数将被添加到CFLAGS取量片</td></tr><tr><td>–with-Id-opt=parameters</td><td style="text-align:center">设置附加的参数,链接系统库</td></tr></tbody></table><h2 id="Nginx主配置文件的解读（nginx-conf）"><a href="#Nginx主配置文件的解读（nginx-conf）" class="headerlink" title="Nginx主配置文件的解读（nginx.conf）"></a>Nginx主配置文件的解读（nginx.conf）</h2><p>以下是Nginx原始的配置文件</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">user  nginx;</span><br><span class="line">worker_processes  1;  多进程  I/O复用   看系统自带的配置CPU数量 保保持一致</span><br><span class="line"></span><br><span class="line">error_log  /var/log/nginx/error.log warn;</span><br><span class="line">pid        /var/run/nginx.pid;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       /etc/nginx/mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    log_format  main  $remote_addr - $remote_user [$time_local] &quot;$request&quot; &apos;</span><br><span class="line">                      &apos;$status $body_bytes_sent &quot;$http_referer&quot; &apos;</span><br><span class="line">                      &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&apos;;</span><br><span class="line"></span><br><span class="line">    access_log  /var/log/nginx/access.log  main;</span><br><span class="line"></span><br><span class="line">    sendfile        on;</span><br><span class="line">    #tcp_nopush     on;</span><br><span class="line"></span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line"></span><br><span class="line">    #gzip  on;</span><br><span class="line"></span><br><span class="line">    include /etc/nginx/conf.d/*.conf;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="log-format-中的配置语法"><a href="#log-format-中的配置语法" class="headerlink" title="log_format 中的配置语法"></a>log_format 中的配置语法</h2><table><thead><tr><th>参数</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td>$remote_addr</td><td>客户端地址</td><td>211.28.65.253</td></tr><tr><td>$remote_user</td><td>客户端用户名称</td><td></td></tr><tr><td>$time_local</td><td>访问时间和时区</td><td>18/Jul/2012:17:00:01 +0800</td></tr><tr><td>$request</td><td>请求的URI和HTTP协议</td><td>“GET /article-10000.html HTTP/1.1”</td></tr><tr><td>$http_host</td><td>请求地址，即浏览器中你输入的地址（IP或域名）</td><td><a href="http://www.wang.com" target="_blank" rel="noopener">www.wang.com</a> 192.168.100.100</td></tr><tr><td>$status</td><td>HTTP请求状态</td><td>200</td></tr><tr><td>$upstream_status</td><td>upstream状态</td><td>200</td></tr><tr><td>$body_bytes_sent</td><td>发送给客户端文件内容大小</td><td>1547</td></tr><tr><td>$http_referer</td><td>url跳转来源</td><td><a href="https://www.baidu.com/" target="_blank" rel="noopener">https://www.baidu.com/</a></td></tr><tr><td>$http_user_agent</td><td>用户终端浏览器等信息</td><td>“Mozilla/4.0 (compatible; MSIE 8.0;<br>  Windows NT 5.1; Trident/4.0; SV1; GTB7.0; .NET4.0C;</td></tr><tr><td>$ssl_protocol</td><td>SSL协议版本</td><td>TLSv1</td></tr><tr><td>$ssl_cipher</td><td>交换数据中的算法</td><td>RC4-SHA</td></tr><tr><td>$upstream_addr</td><td>后台upstream的地址，即真正提供服务的主机地址</td><td>10.10.10.100:80</td></tr><tr><td>$request_time</td><td>整个请求的总时间</td><td>0.205</td></tr><tr><td>$upstream_response_time</td><td>请求过程中，upstream响应时间</td><td>0.002</td></tr></tbody></table><p>Nginx中的内置变量</p><figure class="highlight"><table><tr><td class="code"><pre><span class="line">内置变量存放在  ngx_http_core_module 模块中，变量的命名方式和apache 服务器变量是一致的。总而言之，这些变量代表着客户端请求头的内容，例如$http_user_agent, $http_cookie, 等等。下面是nginx支持的所有内置变量：</span><br><span class="line">$arg_name：请求中的的参数名，即“?”后面的arg_name=arg_value形式的arg_name</span><br><span class="line">$args：请求中的参数值</span><br><span class="line">$binary_remote_addr：客户端地址的二进制形式, 固定长度为4个字节</span><br><span class="line">$body_bytes_sent：传输给客户端的字节数，响应头不计算在内；这个变量和Apache的mod_log_config模块中的“%B”参数保持兼容</span><br><span class="line">$bytes_sent：传输给客户端的字节数 (1.3.8, 1.2.5)</span><br><span class="line">$connection：TCP连接的序列号 (1.3.8, 1.2.5)</span><br><span class="line">$connection_requests：TCP连接当前的请求数量 (1.3.8, 1.2.5)</span><br><span class="line">$content_length：“Content-Length” 请求头字段</span><br><span class="line">$content_type：“Content-Type” 请求头字段</span><br><span class="line">$cookie_name：cookie名称</span><br><span class="line">$document_root：当前请求的文档根目录或别名</span><br><span class="line">$document_uri：同 $uri</span><br><span class="line">$host：优先级如下：HTTP请求行的主机名&gt;”HOST”请求头字段&gt;符合请求的服务器名</span><br><span class="line">$hostname：主机名</span><br><span class="line">$http_name：匹配任意请求头字段； 变量名中的后半部分“name”可以替换成任意请求头字段， 如在配置文件中需要获取http请求头：“Accept-Language”，那么将“－”替换为下划线，大写 字母替换为小写，形如：$http_accept_language即可。 </span><br><span class="line">$https：如果开启了SSL安全模式，值为“on”，否则为空字 符串。</span><br><span class="line">$is_args：如果请求中有参数，值为“?”，否则为空字符串。</span><br><span class="line">$limit_rate：用于设置响应的速度限制，详见 limit_rate。</span><br><span class="line">$msec：当前的Unix时间戳 (1.3.9, 1.2.6)</span><br><span class="line">$nginx_version：nginx版本</span><br><span class="line">$pid：工作进程的PID</span><br><span class="line">$pipe：如果请求来自管道通信，值为“p”，否则为“.” (1.3.12, 1.2.7)</span><br><span class="line">$proxy_protocol_addr：获取代理访问服务器的客户端地址，如果是直接访问，该值为空字符串 。(1.5.12)</span><br><span class="line">$query_string：同 $args</span><br><span class="line">$realpath_root：当前请求的文档根目录或别名的真实路径，会将所有符号连接转换为真实路径。</span><br><span class="line">$remote_addr：客户端地址</span><br><span class="line">$remote_port：客户端端口</span><br><span class="line">$remote_user：用于HTTP基础认证服务的用户名</span><br><span class="line">$request：代表客户端的请求地址</span><br><span class="line">$request_body：客户端的请求主体，此变量可在location中使用，将请求主体通过proxy_pass, fastcgi_pass, uwsgi_pass, 和 scgi_pass传递给下一级的代理服务器。</span><br><span class="line">$request_body_file：将客户端请求主体保存在临时文件中。文件处理结束后，此文件需删除。如果需要之一开启此功能，需要设置client_body_in_file_only。如果将次文件传递给后端的代理服务器，需要禁用request body，即设置proxy_pass_request_body off，fastcgi_pass_request_body off, uwsgi_pass_request_body off, or scgi_pass_request_body off 。</span><br><span class="line">$request_completion：如果请求成功，值为”OK”，如果请求未完成或者请求不是一个范围请求的最后一部分，则为空。</span><br><span class="line">$request_filename：当前连接请求的文件路径，由root或alias指令与URI请求生成。</span><br><span class="line">$request_length：请求的长度 (包括请求的地址, http请求头和请求主体) (1.3.12, 1.2.7)</span><br><span class="line">$request_method：HTTP请求方法，通常为“GET”或“POST”</span><br><span class="line">$request_time：处理客户端请求使用的时间 (1.3.9, 1.2.6);  从读取客户端的第一个字节开始计时。</span><br><span class="line">$request_uri：这个变量等于包含一些客户端请求参数的原始URI，它无法修改，请查看$uri更改或重写URI，不包含主机名，例如：”/cnphp/test.php?arg=freemouse”。</span><br><span class="line">$scheme：请求使用的Web协议, “http” 或 “https”</span><br><span class="line">$sent_http_name：可以设置任意http响应头字段； 变量名中的后半部分“name”可以替换成任意响应头字段，如需要设置响应头Content-length，那么将“－”替换为下划线，大写字母替换为小写，形如：$sent_http_content_length 4096即可。</span><br><span class="line">$server_addr：服务器端地址，需要注意的是：为了避免访问linux系统内核，应将ip地址提前设置在配置文件中。</span><br><span class="line">$server_name：服务器名，www.cnphp.info</span><br><span class="line">$server_port：服务器端口</span><br><span class="line">$server_protocol：服务器的HTTP版本, 通常为 “HTTP/1.0” 或 “HTTP/1.1”</span><br><span class="line">$status：HTTP响应代码 (1.3.2, 1.2.2)</span><br><span class="line">$tcpinfo_rtt, $tcpinfo_rttvar, $tcpinfo_snd_cwnd, $tcpinfo_rcv_space：客户端TCP连接的具体信息</span><br><span class="line">$time_iso8601：服务器时间的ISO 8610格式 (1.3.12, 1.2.7)</span><br><span class="line">$time_local：服务器时间（LOG Format 格式） (1.3.12, 1.2.7)</span><br><span class="line">$uri：请求中的当前URI(不带请求参数，参数位于$args)，可以不同于浏览器传递的$request_uri的值，它可以通过内部重定向，或者使用index指令进行修改，$uri不包含主机名，如”/foo/bar.html”。</span><br></pre></td></tr></table></figure><table><thead><tr><th>命令</th><th>作用</th></tr></thead><tbody><tr><td>nginx -v</td><td>Nginx 的版本号</td></tr><tr><td>nginx -V 2&gt;&amp;1</td><td>sed “s/\s+–/\n –/g”</td><td>Nginx的目录和配置语法</td></tr><tr><td>nginx -c /etc/nginx/nginx.conf</td><td>Nginx 的启动</td></tr><tr><td>tail -n 200 /var/log/nginx/access.log</td><td>查看打印访问的信息</td></tr><tr><td>nginx -tc /etc/nginx/nginx.conf</td><td>检查配置是否正确</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
            <tag> CentOS 7 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx学习</title>
      <link href="/2019/01/13/Nginx%E5%AD%A6%E4%B9%A0/"/>
      <url>/2019/01/13/Nginx%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<blockquote><p>注意：所有操作都是基于 CentOS 7系统下进行的操作！！</p></blockquote><h2 id="一：对安装Nginx的环境变量的确认"><a href="#一：对安装Nginx的环境变量的确认" class="headerlink" title="一：对安装Nginx的环境变量的确认"></a>一：对安装Nginx的环境变量的确认</h2><h3 id="1-1四项确认"><a href="#1-1四项确认" class="headerlink" title="1.1四项确认"></a>1.1四项确认</h3><ul><li>确认系统网络</li><li>确认yum可用</li><li>确认关闭iptables规则</li><li>确认停用selinux</li><li>关闭防火墙</li></ul><p>使用Nginx要对Linux进行的初始化操作，方便快速集成Nginx</p><h3 id="1-2-初始化Linux"><a href="#1-2-初始化Linux" class="headerlink" title="1.2 初始化Linux"></a>1.2 初始化Linux</h3><p>安装基本的控件</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum -y install wget httpd-tool vim</span><br></pre></td></tr></table></figure><p>初始化相关的目录（app——&gt;代码 downloa——&gt;下载 logs——&gt;日志 work——&gt;脚本 backup——&gt;备份）</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd /opt;mkdir app download logs work backup</span><br></pre></td></tr></table></figure><blockquote><p><em>检查安装的情况</em><br>对四项确认的检查</p></blockquote><h3 id="1-3-安装gcc"><a href="#1-3-安装gcc" class="headerlink" title="1.3 安装gcc"></a>1.3 安装gcc</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum -y install gcc gcc-c++ autoconf  pcre pcre-devel make automake</span><br></pre></td></tr></table></figure><p>查看gcc的安装情况<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum list|grep gcc</span><br></pre></td></tr></table></figure></p><h3 id="1-4-关闭iptables规则"><a href="#1-4-关闭iptables规则" class="headerlink" title="1.4 关闭iptables规则"></a>1.4 关闭iptables规则</h3><p>查看iptables的规则<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">iptables -L</span><br></pre></td></tr></table></figure></p><p>关闭 iptables 规则<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">iptables -F</span><br></pre></td></tr></table></figure></p><blockquote><p>保险起见，输入iptables -t nat -L 查看nat 表中是否有规则 如果有,请关闭!<br><br>查看nat表： <em>iptables -t nat -L</em><br><br>关闭nat表： <em>iptables -t nat -F</em></p></blockquote><h3 id="1-5-确认停用selinux"><a href="#1-5-确认停用selinux" class="headerlink" title="1.5  确认停用selinux"></a>1.5  确认停用selinux</h3><p>查看状态<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">getenforce</span><br></pre></td></tr></table></figure></p><p>停用selinux<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">setenforce 0</span><br></pre></td></tr></table></figure></p><h2 id="二：什么是Nginx"><a href="#二：什么是Nginx" class="headerlink" title="二：什么是Nginx"></a>二：什么是Nginx</h2><p>简单来说Nginx就是一个中间件，Nginx是一个开源且高性能、可靠的HTTP中间件、代理服务。</p><p><a href="https://imgchr.com/i/FvcAjf" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/01/13/FvcAjf.md.png" alt="Nginx的中间件架构"></a></p><blockquote><p>常见的HTTP服务<br><br>HTTPD-Apache基金会<br><br>IIS-微软<br><br>GWS-Google<br></p></blockquote><h2 id="三、加什么选择nginx-（Nginx-的优点）"><a href="#三、加什么选择nginx-（Nginx-的优点）" class="headerlink" title="三、加什么选择nginx?（Nginx 的优点）"></a>三、加什么选择nginx?（Nginx 的优点）</h2><h3 id="一、I-O-多路复用epoll"><a href="#一、I-O-多路复用epoll" class="headerlink" title="一、I/O 多路复用epoll"></a>一、I/O 多路复用epoll</h3><p>多个描述符的I/O操作都能在一个线程内并发交替地顺序完成,这就叫I/O多路复用,这里的“复用”指的是复用同一个线程。</p><p>什么是IO复用,如下图</p><p>[<img src="https://s2.ax1x.com/2019/01/13/FvcYbF.md.png" alt="FvcYbF.md.png">]</p><p><strong>原始请求，老师一个一个的请求检查某个学生</strong><br>[<img src="https://s2.ax1x.com/2019/01/13/FvcwCR.md.png" alt="FvcwCR.md.png">]</p><p><strong>多线程处理IO流</strong><br><img src="https://s2.ax1x.com/2019/01/13/FvcDv6.md.png" alt="FvcDv6.md.png"></p><p><strong>IO多路复用</strong></p><p>有客户端主动上报请求<br><a href="https://imgchr.com/i/Fvc2UH" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/01/13/Fvc2UH.md.png" alt="客户端主动上报"></a></p><p>原因一、IO多路复用epoll</p><h3 id="二、什么是epoll"><a href="#二、什么是epoll" class="headerlink" title="二、什么是epoll"></a>二、什么是epoll</h3><p>IO多路复用的实现方式</p><ul><li>select</li><li>poll</li><li>epoll</li></ul><p><strong>2.2.1什么select</strong></p><p><img src="https://s2.ax1x.com/2019/01/13/FvgMZD.png" alt="FvgMZD.png"></p><p><strong>2.2.2 select缺点</strong></p><p>1)能够监视文件描述符的数量存在最大限制(1024)<br>2)线性扫描效率低下</p><p><strong>2.2.3 epoll模型</strong></p><ol><li><p>效率高</p><p> 1)每当FD就绪,采用系统的回调函数之间将fd放入,效率更高。<br> 2)最大连接无限制</p></li><li><p>轻量级</p><p> 1)功能模块少一<br> 2)代码模块化:</p></li><li><p>CPU亲和(affinity)</p><p> 一、为什么需要CPU亲和<br></p><p> Nginx处理流程是靠CPU的核心数来处理的</p><p> <img src="https://s2.ax1x.com/2019/01/13/FvgHQx.md.png" alt="FvgHQx.md.png"></p><p> 二、什么是CPU亲和<br><br> 是一种把CPU核心和Nginx工作进程绑定方式,把每个worker进程固定在一个cpu上执行,<br> 减少切换cpu的cache miss,获得更好的性能。</p></li><li><p>sendfile</p><p> <img src="https://s2.ax1x.com/2019/01/13/FvgXwD.png" alt="FvgXwD.png"></p></li></ol><h2 id="三、安装Nginx"><a href="#三、安装Nginx" class="headerlink" title="三、安装Nginx"></a>三、安装Nginx</h2><p><strong>3.1 Nginx 的版本</strong></p><blockquote><p>建议下载稳定版 (阿里推出的Nginx) <a href="http://tengine.taobao.org/" target="_blank" rel="noopener">Tengine</a></p></blockquote><ol><li>Mainlineversion-开发版</li><li>Stableversion-稳定版</li><li>Legacyversion-历史版本</li></ol><p>Nginx官方网站—-&gt;<a href="www.nginx.org">www.nginx.org</a></p><p><strong>3.1.1 使用Nginx官方推荐的安装</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim /etc/yum.repos.d/nginx.repo</span><br><span class="line"></span><br><span class="line">&lt;!-- 下面是输入的内容 --&gt;</span><br><span class="line">[nginx]</span><br><span class="line">name=nginx repo</span><br><span class="line">baseurl=http://nginx.org/packages/centos/7/$basearch/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br></pre></td></tr></table></figure><blockquote><p>注：由于我使用的 Centos 7 的系统<br>所以我写的是  <em>baseurl=<a href="http://nginx.org/packages/centos/7/$basearch/" target="_blank" rel="noopener">http://nginx.org/packages/centos/7/$basearch/</a> </em></p></blockquote><p>创建完成后输入一下命令执行安装程序</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum list</span><br></pre></td></tr></table></figure><p><strong>3.1.2 直接使用命令安装Nginx</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rpm -ql nginx</span><br></pre></td></tr></table></figure><p>//以下文件正在恢复</p><h2 id="四、Nginx的相关配置文件"><a href="#四、Nginx的相关配置文件" class="headerlink" title="四、Nginx的相关配置文件"></a>四、Nginx的相关配置文件</h2><p><strong>4.1 Nginx的主配置文件</strong></p><p>查看Nginx的<font color="#dd0000"><strong>主配置文件</strong></font><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd /etc/nginx  </span><br><span class="line">vim nginx.conf</span><br></pre></td></tr></table></figure></p><p>详情请看链接–&gt;  查看Nginx 主配置文件的链接</p><blockquote><font color="#dd0000">请注意 nginx.conf –&gt;主配置文件 指的是Nginx的主配置文件<br><br>在Nginx的安装目录中还包含了其他的配置文件(/etc/nginx/conf.d/  文件目录下所有 *.conf 结尾的配置文件)</font></blockquote><p>include /etc/nginx/conf.d/  所有的<em>.conf;<br>包含/etc/nginx/conf.d/  所有</em>.conf的文件都要读<br>默认配置语法</p><p>以下是对Nginx.conf中相关的配置的注解</p><table><thead><tr><th>语句</th><th style="text-align:center">作用(解释)</th><th style="text-align:center">一般的配置</th></tr></thead><tbody><tr><td>user</td><td style="text-align:center">设置nginx服务的系统使用用户</td><td style="text-align:center"></td></tr><tr><td>worker_processes</td><td style="text-align:center">工作进程数</td><td style="text-align:center"></td></tr><tr><td>error_log</td><td style="text-align:center">nginx的错误日志</td><td style="text-align:center"></td></tr><tr><td>pid</td><td style="text-align:center">nginx服务启动时候pid</td><td style="text-align:center"></td></tr><tr><td>events-events worker_connections</td><td style="text-align:center">每个进程允许最大连接数</td><td style="text-align:center">（6535   一般一万个）</td></tr><tr><td>events-use</td><td style="text-align:center">工作进程数</td><td style="text-align:center"></td></tr><tr><td>http</td><td style="text-align:center">HTTP的全局配置</td></tr></tbody></table><p>请注意 http{…}中只是作为全局配置来使用，具体的每一个具体的配置请参考 <code>/etc/nginx/conf.d/</code>中的配置进行自己相关的服务的配置</p><blockquote><p>在使用的过程中一般要对http{…}进行常见的配置<br><br>但是由于http中可以包含多给server服务，所以一般要对server也要进行配置</p></blockquote><p>下面是关于Nginx 默认配置中server的配置（已经删除某些注释性代码）</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  localhost;</span><br><span class="line"></span><br><span class="line">    #charset koi8-r;</span><br><span class="line">    #access_log  /var/log/nginx/host.access.log  main;</span><br><span class="line">    </span><br><span class="line">    location /mystatus&#123;</span><br><span class="line">        stub_status;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /usr/share/nginx/html;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    #error_page  404              /404.html;</span><br><span class="line">    # redirect server error pages to the static page /50x.html</span><br><span class="line">    #</span><br><span class="line">    error_page   500 502 503 504  /50x.html;</span><br><span class="line">    location = /50x.html &#123;</span><br><span class="line">        root   /usr/share/nginx/html;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Server 中属性的解读</p><table><thead><tr><th style="text-align:center">名称</th><th style="text-align:center">作用(解释)</th></tr></thead><tbody><tr><td style="text-align:center">listen</td><td style="text-align:center">监听的端口</td></tr><tr><td style="text-align:center">server_name</td><td style="text-align:center">主机名，也可以使用远端的主机名称</td></tr><tr><td style="text-align:center">location</td><td style="text-align:center">对server中相关的配置</td></tr><tr><td style="text-align:center">error_page</td><td style="text-align:center">错误页面</td></tr></tbody></table><p>我的错误页面<br>error page<br>目录的根路径</p><p><img src="https://s2.ax1x.com/2019/01/14/Fx7EOH.png" alt="Fx7EOH.png"></p><p>systemctl restart nginx.service</p><hr><p><strong>4.2 Nginx日志类型</strong><br>Nginx的日志类型主要包括:</p><ul><li>error_log  记录nginx处理Http请求的错误的状态，以及nginx本身服务的运行错误状态，按照不同的级别进行记录 </li><li>access_log 记录每一次Http请求的访问状态，用于分析每一次请求和交互，行为进行分析，依赖于log_format实现</li><li>log_format 将nginx中的变量组织在一起，记录到access_log中</li></ul><p><strong>4.2.1 log_format的配置项</strong></p><p>Syntax:log_format name[escape=default|json]string…;<br>Default:log_format combined “…”<br>Context:http</p><p>3、Nginx变量<br>HTTP请求变量-arg_PARAMETER、http_HEADER、sent_http_HEADER</p><p>内置变量-Nginx内置的<br>自定义变量-自己定义</p><p>在nginx.conf 配置文件添加<br>‘$http_user_agent’<br>执行 nginx -t -c /etc/nginx/nginx.conf  检查配置是否OK<br>执行 nginx -s reload -c /etc/nginx/nginx.conf</p><p>更新配置</p><blockquote><p>可能会出现的错误</p></blockquote><p>nginx: [error] invalid PID number “” in “/run/nginx.pid”<br>在重启云主机（系统）之后，执行 nginx -t 是OK的，然而在执行 nginx -s reload 的时候报错<br>nginx: [error] invalid PID number “” in “/run/nginx.pid”<br>经过查找，找到 <a href="http://www.cnblogs.com/yuqianwen/p/4285686.html" target="_blank" rel="noopener">http://www.cnblogs.com/yuqianwen/p/4285686.html</a><br>需要先执行<br>nginx -c /etc/nginx/nginx.conf<br>nginx.conf文件的路径可以从nginx -t的返回中找到。<br>nginx -s reload</p><p>log_format</p><p>Nginx  中默认配置的文件中的内容—&gt;http<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">log_format  main  &apos;$http_user_agent&apos; $remote_addr - $remote_user [$time_local] &quot;$request&quot; &apos;</span><br><span class="line">                     &apos;$status $body_bytes_sent &quot;$http_referer&quot; &apos;</span><br><span class="line">                     &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&apos;;</span><br></pre></td></tr></table></figure></p><p>详情的配置项可以参考Nginx相关配置项的说明–》》log_format 中的配置语法</p><p><strong>4.3 Nginx 模块学习</strong></p><p>Nginx 模块主要分为 官方模块和第三方模块(阿里推出的Nginx模块Tengine)</p><p><strong>4.3.1 stub_status模块</strong></p><p><code>--with-http_stub_status_module</code>模块用来显示Nginx的容户端状态   </p><p>http_stub_status_module的配置语法</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Syntax:stub_status;</span><br><span class="line">Default:一一\</span><br><span class="line">Context：server, location</span><br></pre></td></tr></table></figure><p>stub_status配置的例子</p><p>location /mystatus{<br>  stub_status;<br>}</p><p>访问结果<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Active connections: 2 </span><br><span class="line">server accepts handled requests</span><br><span class="line"> 11 11 7 </span><br><span class="line">Reading: 0 Writing: 1 Waiting: 1</span><br></pre></td></tr></table></figure></p><p><strong>4.3.2 random_index模块</strong></p><blockquote><p>一般不配置  要看实际的情况</p></blockquote><p><code>with-http_random_index_module</code> 目录中选择一个随机主页</p><p>http_random_index_module的配置语法<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Syntax:random_index on|off;</span><br><span class="line">Default:random_index off;</span><br><span class="line">Context:location</span><br></pre></td></tr></table></figure></p><p>配置修改defluet.conf中例子 </p><p>location{<br>  root—改变(XXX/XX/C)<br>  random_index on;<br>}</p><blockquote><p>新建某个位置相关的东西 如 XXX/XX/C<br><br>这个文件下面必须要实现有几个页面(index页面)<br><br>同时请注意 当你隐藏掉相关的界面时 对应的东西也是不会实现的<br></p></blockquote><p><strong>4.3.3 http_sub模块</strong></p><p><code>With-http_sub_module</code> HTTP内容曾换,对返回的HTTP的代码进行相关的替换。<br>http_sub模块语法配置<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Syntax:sub_filter string replacement;</span><br><span class="line">Default:一</span><br><span class="line">Context:http,server location</span><br></pre></td></tr></table></figure></p><p><code>sub_filter_last_modified</code>记录的时间判断是否有更新，如果有返回相关的更新界面   缓冲界面中常见的配置。<br>sub_filter_last_modified语法配置<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Syntax:sub_filter_last_modified on|off;</span><br><span class="line">Default:sub_fter_last_modified off;</span><br><span class="line">Context:http,server,location</span><br></pre></td></tr></table></figure></p><p><code>sub_filter_once</code>是否全局替换<br>Syntax:sub_filter_once on|off;<br>Default:subonce on;<br>Context:http,server,location</p><p>具体的演示相关的内容<br>location{<br>  root /xxx/xxx/xx;<br>  sub_filter ‘<a>AA’ ‘<a>BB’;//要替换<br>  sub_filter_once off;//全局替换<br>}</a></a></p><p><strong>4.3.4 请求限制模块</strong></p><p>Nginx的请求限制 </p><ul><li>连接频率限制-limit_conn_module模块</li><li>请求频率限制-limit_req_module模块</li></ul><blockquote><p>以下内容转载自<a href="https://blog.csdn.net/echizao1839/article/details/80875358" target="_blank" rel="noopener">nginx的请求限制（连接限制和请求限制）</a></p></blockquote><p>我们经常会遇到这种情况，服务器流量异常，负载过大等等。对于大流量恶意的攻击访问，会带来带宽的浪费，服务器压力，影响业务，往往考虑对同一个ip的连接数，并发数进行限制。http_limit_conn_module 模块来实现。该模块可以根据定义的键来限制每个键值的连接数，如同一个IP来源的连接数。并不是所有的连接都会被该模块计数，只有那些正在被处理的请求（这些请求的头信息已被完全读入）所在的连接才会被计数。http_limit_req_module 模块来实现，该模块可以通过定义的 键值来限制请求处理的频率。特别的，可以限制来自单个IP地址的请求处理频率。 限制的方法如同漏斗，每秒固定处理请求数，推迟过多请求。</p><p>链接限制<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Syntax:limit_conn_zone key zone=name:size;</span><br><span class="line">Default:一*</span><br><span class="line">Context:http</span><br></pre></td></tr></table></figure></p><p>指令描述会话状态存储区域。<br>会话的数目按照指定的变量来决定，它依赖于使用的变量大小和memory_max_size的值。</p><p>该指令描述会话状态存储区域。键的状态中保存了当前连接数，键的值可以是特定变量的任何非空值（空值将不会被考虑）。$variable定义键，zone=name定义区域名称，后面的limit_conn指令会用到的。size定义各个键共享内存空间大小。如：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">limit_conn_zone $binary_remote_addr zone=addr:10m;</span><br></pre></td></tr></table></figure></p><p>注释：客户端的IP地址作为键。注意，这里使用的是$binary_remote_addr变量，而不是$remote_addr变量。</p><p>$remote_addr变量的长度为7字节到15字节，而存储状态在32位平台中占用32字节或64字节，在64位平台中占用64字节。<br>$binary_remote_addr变量的长度是固定的4字节，存储状态在32位平台中占用32字节或64字节，在64位平台中占用64字节。<br>1M共享空间可以保存3.2万个32位的状态，1.6万个64位的状态。<br>如果共享内存空间被耗尽，服务器将会对后续所有的请求返回 503 (Service Temporarily Unavailable) 错误。</p><p>limit_zone 指令和limit_conn_zone指令同等意思，已经被弃用，就不再做说明了。</p><p>limit_conn_log_level<br>语法：limit_conn_log_level info | notice | warn | error<br>默认值：error<br>配置段：http, server, location<br>当达到最大限制连接数后，记录日志的等级</p><p>Syntax:limit_conn zone number;<br>Default:一<br>Context:http,server,location</p><p>指定每个给定键值的最大同时连接数，当超过这个数字时被返回503 (Service Temporarily Unavailable)错误。如：</p><p>limit_conn_zone $binary_remote_addrzone=addr:10m;<br>server{<br>    location /<a href="http://www.baidu.com/{" target="_blank" rel="noopener">www.baidu.com/{</a><br>        limit_conn addr 1;<br>    }<br>}</p><p>同一IP同一时间只允许有一个连接。<br>当多个 limit_conn 指令被配置时，所有的连接数限制都会生效。比如，下面配置不仅会限制单一IP来源的连接数，同时也会限制单一虚拟服务器的总连接数：</p><p>limit_conn_zone $binary_remote_addr zone=perip:10m;<br>limit_conn_zone $server_name zone=perserver:10m;<br>server {<br>    limit_conn perip 10;<br>    limit_conn perserver 100;<br>}</p><p>[warning]limit_conn指令可以从上级继承下来。[/warning]</p><p>limit_conn_status<br>语法: limit_conn_status code;<br>默认值: limit_conn_status 503;<br>配置段: http, server, location</p><p>该指定在1.3.15版本引入的。指定当超过限制时，返回的状态码。默认是503。</p><p>limit_rate<br>语法：limit_rate rate<br>默认值：0<br>配置段：http, server, location, if in location<br>对每个连接的速率限制。参数rate的单位是字节/秒，设置为0将关闭限速。 按连接限速而不是按IP限制，因此如果某个客户端同时开启了两个连接，那么客户端的整体速率是这条指令设置值的2倍。</p><p>完整实例配置</p><p>http{<br>    limit_conn_zone $binary_remote_addrzone=limit:10m;<br>    limit_conn_log_level info;<br>    server{<br>        location  ^~/download/{<br>        limit_conn limit 4;<br>        limit_rate 200k;//限速<br>        /data/<a href="http://www.baidu.com/download/" target="_blank" rel="noopener">www.baidu.com/download/</a>;<br>        }<br>    }<br>}</p><blockquote><p>使用注意事项<br>事务都具有两面性的。http_limit_conn_module 模块虽说可以解决当前面临的并发问题，但是会引入另外一些问题的。如前端如果有做LVS或反代，而我们后端启用了该模块功能，那不是非常多503错误了？这样的话，可以在前端启用该模块，要么就是设置白名单，白名单设置参见后续的文档。</p></blockquote><p>请求限制<br>Syntax:limit_req_zone key zone=name:size rate=rate;<br>Default:一“<br>Context:http</p><p>设置一块共享内存限制域用来保存键值的状态参数。 特别是保存了当前超出请求的数量。 键的值就是指定的变量（空值不会被计算）。如<br>limit_req_zone $binary_remote_addr zone=one:10m rate=1r/s;<br>说明：区域名称为one，大小为10m，平均处理的请求频率不能超过每秒一次。<br>键值是客户端IP。<br>如果限制域的存储空间耗尽了，对于后续所有请求，服务器都会返回 503 (Service Temporarily Unavailable)错误。<br>速度可以设置为每秒处理请求数和每分钟处理请求数，其值必须是整数，所以如果你需要指定每秒处理少于1个的请求，2秒处理一个请求，可以使用 “30r/m”。</p><p>limit_req_log_level<br>语法: limit_req_log_level info | notice | warn | error;<br>默认值: limit_req_log_level error;<br>配置段: http, server, location</p><p>设置你所希望的日志级别，当服务器因为频率过高拒绝或者延迟处理请求时可以记下相应级别的日志。 延迟记录的日志级别比拒绝的低一个级别；比如， 如果设置“limit_req_log_level notice”， 延迟的日志就是info级别。</p><p>limit_req_status<br>语法: limit_req_status code;<br>默认值: limit_req_status 503;<br>配置段: http, server, location</p><p>该指令在1.3.15版本引入。设置拒绝请求的响应状态码。</p><p>Syntax:limit_req zone=name [burst=number][nodelay];<br>Default:一<br>Context:http,server location</p><p>设置对应的共享内存限制域和允许被处理的最大请求数阈值。 如果请求的频率超过了限制域配置的值，请求处理会被延迟，所以所有的请求都是以定义的频率被处理的。 超过频率限制的请求会被延迟，直到被延迟的请求数超过了定义的阈值，这时，这个请求会被终止，并返回503 (Service Temporarily Unavailable) 错误。这个阈值的默认值为0。如：</p><p>limit_req_zone $binary_remote_addr zone=creq:10 mrate=1r/s;<br>server{<br>    location /<a href="http://www.baidu.com/{" target="_blank" rel="noopener">www.baidu.com/{</a><br>        limit_req zone=creq burst=5;<br>    }<br>}<br>限制平均每秒不超过一个请求，同时允许超过频率限制的请求数不多于5个<br>如果不希望超过的请求被延迟，可以用nodelay参数,如：<br>limit_req zone=ttlsa_com burst=5 nodelay;<br>完整实例配置</p><p>完整实例配置</p><p>http{<br>    limit_req_zone $binary_remote_addr zone=creq:10m rate=1r/s;<br>    server{<br>        location  ^~/download/{<br>        limit_req zone=creq burst=5;<br>        data/<a href="http://www.baidu.com/download/" target="_blank" rel="noopener">www.baidu.com/download/</a>;<br>        }<br>    }<br>}<br><strong>4.3.5 IP白名单</strong></p><p>可能要对某些IP不做限制，需要使用到白名单。<br>基于Nginx的访问控制</p><p>基于IP的访问控制 -&gt; http_access_module<br>基于用户的信任登录-&gt; http_auth_basic_module</p><p>http_access_module</p><blockquote><p> address IP地址  CIDR 网段 unix socket访问   all所有的访问</p></blockquote><p>http_access_module的配置语法<br>允许登录的配置语法<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Syntax:allow address |CIDR|unix:|all;</span><br><span class="line">Default:一\</span><br><span class="line">Context:http,server,location,limit_except</span><br></pre></td></tr></table></figure></p><p>不允许登录的配置语法</p><p>Syntax:deny address|CIDR|unix:|all;<br>Default:一<br>Context:http,server,location,limit_except</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1ocation ~ ^/admin.html&#123;</span><br><span class="line">  root /opt/app/code;</span><br><span class="line">  deny 222.128.189.17;</span><br><span class="line">  allow a11;</span><br><span class="line">  index index.html index.htm;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">~ 匹配符  ^根路径</span><br></pre></td></tr></table></figure><!-- http_x_forwarded_for  --><p>http_access_module局限性的解决办法</p><p>方法一、采用别的HTTP头信息控制访问,如:HTTP_X_FORWARD_FOR<br>方法二、结合geo模块作<br>方法三、通过HTTP自定义变量传递</p><p>http_auth_basic_module基于用户登录的模块<br>配置语法规则<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Syntax:auth_basic string|off;</span><br><span class="line">Default:auth_basicoff;*</span><br><span class="line">Context:http,serverlocation,limit_except</span><br></pre></td></tr></table></figure></p><p>使用读取文件的形式来进行登录验证<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Syntax:auth_basic_user_file file;</span><br><span class="line">Default:一</span><br><span class="line">Context:http,serverlocation,limit_except</span><br></pre></td></tr></table></figure></p><p>安装 htpasswd(安装这个主要是进行文件登录要准备的东西)</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install httpd-tools -y</span><br></pre></td></tr></table></figure><p>htpasswd -c ./auth_conf admin(用户名)</p><p>18kc4nriNsKZzK84k-FLCyA</p><p>2、http_auth_basic_module局限性<br>一、用户信息依赖文件方式<br>二、操作管理机械,效率低下</p><p>3、解决方案<br>一、Nginx结合LUA实现高效验证<br>二、Nginx和LDAP打通,利用nginx-auth-Idap模块</p><p>未完待续…</p>]]></content>
      
      
      <categories>
          
          <category> Nginx </category>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
            <tag> CentOS 7 </tag>
            
            <tag> Linux </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android修改个人头像</title>
      <link href="/2019/01/07/Android%E4%BF%AE%E6%94%B9%E4%B8%AA%E4%BA%BA%E5%A4%B4%E5%83%8F/"/>
      <url>/2019/01/07/Android%E4%BF%AE%E6%94%B9%E4%B8%AA%E4%BA%BA%E5%A4%B4%E5%83%8F/</url>
      
        <content type="html"><![CDATA[<p><strong>写在前面:</strong><br>更换头像这个功能在用户界面几乎是100%出现的。通过拍摄照片或者调用本地图库中的图片，并且进行剪裁，来进行头像的设置。</p><p>一般来说可以通过第三方库来进行裁剪修改，但是其实android 自带的原生的裁剪图片就可以满足日常开发的需求.</p><p>抽时间写了一个基于android原生的裁剪图片的小例子<em>温故而知新吧</em> :joy:</p><hr><h2 id="android-权限的申请"><a href="#android-权限的申请" class="headerlink" title="android 权限的申请"></a>android 权限的申请</h2><blockquote><p>注:Android6.0后相关的敏感权限都需要申请</p></blockquote><p>使用<code>拍摄照片或者</code>调用<code>本地图库</code>需要对以下的权限进行申请</p><ul><li>读写权限（android.permission.WRITE_EXTERNAL_STORAG , android.permission.READ_EXTERNAL_STORAGE）</li><li>相机权限（android.permission.CAMERA）</li></ul><p>相关的期限需要在AndroidManifest.xml文件中进行申请</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!--照相机权限--&gt;</span><br><span class="line">&lt;uses-permission android:name=&quot;android.permission.CAMERA&quot;&gt;&lt;/uses-permission&gt;</span><br><span class="line">&lt;!--写文件--&gt;</span><br><span class="line">&lt;uses-permission android:name=&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot;&gt;&lt;/uses-permission&gt;</span><br><span class="line">&lt;!--读文件--&gt;</span><br><span class="line">&lt;uses-permission android:name=&quot;android.permission.READ_EXTERNAL_STORAGE&quot;&gt;&lt;/uses-permission&gt;</span><br></pre></td></tr></table></figure><p>对权限的申请 可以使用第三方的权限申请库 <a href="https://github.com/getActivity/XXPermissions" target="_blank" rel="noopener">XXPermissions</a> <a href="https://github.com/googlesamples/easypermissions" target="_blank" rel="noopener">EasyPermissions</a> <a href="https://github.com/arvinljw/PermissionHelper" target="_blank" rel="noopener">PermissionHelper</a> …..网上有很多的第三方权限库，自己百度</p><h2 id="裁剪的工具类"><a href="#裁剪的工具类" class="headerlink" title="裁剪的工具类"></a>裁剪的工具类</h2><p>裁剪的工具类，用于用户选择完图片，返回数据进行相关的裁剪</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">      *<span class="doctag">@Author</span> 南木</span></span><br><span class="line"><span class="comment">      *<span class="doctag">@Blog</span> https://lucas-liang.github.io/</span></span><br><span class="line"><span class="comment">      *<span class="doctag">@Time</span> 2019/1/7</span></span><br><span class="line"><span class="comment">      *<span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileImageUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Description</span> 调用本地的剪切图片的工具类</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Date</span> 2019/1/7</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     **/</span></span><br><span class="line">    <span class="meta">@SuppressLint</span>(<span class="string">"NewApi"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getPath</span><span class="params">(<span class="keyword">final</span> Context context, <span class="keyword">final</span> Uri uri)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">boolean</span> isKitKat = Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.KITKAT;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// DocumentProvider</span></span><br><span class="line">        <span class="keyword">if</span> (isKitKat &amp;&amp; DocumentsContract.isDocumentUri(context, uri)) &#123;</span><br><span class="line">            <span class="comment">// ExternalStorageProvider</span></span><br><span class="line">            <span class="keyword">if</span> (isExternalStorageDocument(uri)) &#123;</span><br><span class="line">                <span class="keyword">final</span> String docId = DocumentsContract.getDocumentId(uri);</span><br><span class="line">                <span class="keyword">final</span> String[] split = docId.split(<span class="string">":"</span>);</span><br><span class="line">                <span class="keyword">final</span> String type = split[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (<span class="string">"primary"</span>.equalsIgnoreCase(type)) &#123;</span><br><span class="line">                    <span class="keyword">return</span> Environment.getExternalStorageDirectory() + <span class="string">"/"</span> + split[<span class="number">1</span>];</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// DownloadsProvider</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (isDownloadsDocument(uri)) &#123;</span><br><span class="line">                <span class="keyword">final</span> String id = DocumentsContract.getDocumentId(uri);</span><br><span class="line">                <span class="keyword">final</span> Uri contentUri = ContentUris.withAppendedId(</span><br><span class="line">                        Uri.parse(<span class="string">"content://downloads/public_downloads"</span>), Long.valueOf(id));</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> getDataColumn(context, contentUri, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line">            &#125; <span class="comment">// MediaProvider</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (isMediaDocument(uri)) &#123;</span><br><span class="line">                <span class="keyword">final</span> String docId = DocumentsContract.getDocumentId(uri);</span><br><span class="line">                <span class="keyword">final</span> String[] split = docId.split(<span class="string">":"</span>);</span><br><span class="line">                <span class="keyword">final</span> String type = split[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">                Uri contentUri = <span class="keyword">null</span>;</span><br><span class="line">                <span class="keyword">if</span> (<span class="string">"image"</span>.equals(type)) &#123;</span><br><span class="line">                    contentUri = MediaStore.Images.Media.EXTERNAL_CONTENT_URI;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"video"</span>.equals(type)) &#123;</span><br><span class="line">                    contentUri = MediaStore.Video.Media.EXTERNAL_CONTENT_URI;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"audio"</span>.equals(type)) &#123;</span><br><span class="line">                    contentUri = MediaStore.Audio.Media.EXTERNAL_CONTENT_URI;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">final</span> String selection = <span class="string">"_id=?"</span>;</span><br><span class="line">                <span class="keyword">final</span> String[] selectionArgs = <span class="keyword">new</span> String[] &#123;</span><br><span class="line">                        split[<span class="number">1</span>]</span><br><span class="line">                &#125;;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> getDataColumn(context, contentUri, selection, selectionArgs);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// MediaStore (and general)</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"content"</span>.equalsIgnoreCase(uri.getScheme())) &#123;</span><br><span class="line">            <span class="comment">// Return the remote address</span></span><br><span class="line">            <span class="keyword">if</span> (isGooglePhotosUri(uri))</span><br><span class="line">                <span class="keyword">return</span> uri.getLastPathSegment();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> getDataColumn(context, uri, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// File</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"file"</span>.equalsIgnoreCase(uri.getScheme())) &#123;</span><br><span class="line">            <span class="keyword">return</span> uri.getPath();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Get the value of the data column for this Uri. This is useful for</span></span><br><span class="line"><span class="comment">     * MediaStore Uris, and other file-based ContentProviders.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> context The context.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> uri The Uri to query.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> selection (Optional) Filter used in the query.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> selectionArgs (Optional) Selection arguments used in the query.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> The value of the _data column, which is typically a file path.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getDataColumn</span><span class="params">(Context context, Uri uri, String selection,</span></span></span><br><span class="line"><span class="function"><span class="params">                                       String[] selectionArgs)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        Cursor cursor = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">final</span> String column = <span class="string">"_data"</span>;</span><br><span class="line">        <span class="keyword">final</span> String[] projection = &#123;</span><br><span class="line">                column</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            cursor = context.getContentResolver().query(uri, projection, selection, selectionArgs,</span><br><span class="line">                    <span class="keyword">null</span>);</span><br><span class="line">            <span class="keyword">if</span> (cursor != <span class="keyword">null</span> &amp;&amp; cursor.moveToFirst()) &#123;</span><br><span class="line">                <span class="keyword">final</span> <span class="keyword">int</span> index = cursor.getColumnIndexOrThrow(column);</span><br><span class="line">                <span class="keyword">return</span> cursor.getString(index);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (cursor != <span class="keyword">null</span>)</span><br><span class="line">                cursor.close();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> uri The Uri to check.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> Whether the Uri authority is ExternalStorageProvider.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isExternalStorageDocument</span><span class="params">(Uri uri)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"com.android.externalstorage.documents"</span>.equals(uri.getAuthority());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> uri The Uri to check.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> Whether the Uri authority is DownloadsProvider.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isDownloadsDocument</span><span class="params">(Uri uri)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"com.android.providers.downloads.documents"</span>.equals(uri.getAuthority());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> uri The Uri to check.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> Whether the Uri authority is MediaProvider.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isMediaDocument</span><span class="params">(Uri uri)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"com.android.providers.media.documents"</span>.equals(uri.getAuthority());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> uri The Uri to check.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> Whether the Uri authority is Google Photos.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isGooglePhotosUri</span><span class="params">(Uri uri)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"com.google.android.apps.photos.content"</span>.equals(uri.getAuthority());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Activity中的代码"><a href="#Activity中的代码" class="headerlink" title="Activity中的代码"></a>Activity中的代码</h2><p>在写运行代码时发现在三星上面会报如下错误（好像还是Android7.0的错误）</p><h3 id="Android7-0中报的错误"><a href="#Android7-0中报的错误" class="headerlink" title="Android7.0中报的错误"></a>Android7.0中报的错误</h3><blockquote><p>exposed beyond app through ClipData.Item.getUri()</p></blockquote><p>解决办法：<br>在onCreate中添加如下代码</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">StrictMode.VmPolicy.Builder builder = <span class="keyword">new</span> StrictMode.VmPolicy.Builder();</span><br><span class="line">StrictMode.setVmPolicy(builder.build());</span><br><span class="line">builder.detectFileUriExposure();</span><br></pre></td></tr></table></figure><p><strong>参考链接 <a href="https://blog.csdn.net/guiping_ding/article/details/78502290" target="_blank" rel="noopener">解决exposed beyond app through ClipData.Item.getUri() 错误</a></strong></p><p>具体实现代码</p><blockquote><p>注： 下面的代码出现的ImageView、Button  均可自己定义<br>主要的还是要看dialog中实现的东西</p></blockquote><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> ImageView avatar;</span><br><span class="line">    <span class="keyword">private</span> Button update;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> CHOOSE_PICTURE = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> TAKE_PICTURE = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> CROP_SMALL_PICTURE = <span class="number">2</span>;</span><br><span class="line">    <span class="comment">/* 头像文件 */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String IMAGE_FILE_NAME = <span class="string">"acatar_image.jpg"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">static</span> Uri tempUri;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@SuppressLint</span>(<span class="string">"NewApi"</span>)</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        <span class="comment">//TODO android 7.0 解决 exposed beyond app through ClipData.Item.getUri()</span></span><br><span class="line">        StrictMode.VmPolicy.Builder builder = <span class="keyword">new</span> StrictMode.VmPolicy.Builder();</span><br><span class="line">        StrictMode.setVmPolicy(builder.build());</span><br><span class="line">        builder.detectFileUriExposure();</span><br><span class="line"></span><br><span class="line">        initView();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">getPermission</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!XXPermissions.isHasPermission(<span class="keyword">this</span>, Permission.Group.STORAGE)</span><br><span class="line">                ||!XXPermissions.isHasPermission(<span class="keyword">this</span>,Permission.CAMERA)) &#123;</span><br><span class="line">            XXPermissions.with(<span class="keyword">this</span>)</span><br><span class="line">                    <span class="comment">//.constantRequest() //可设置被拒绝后继续申请，直到用户授权或者永久拒绝</span></span><br><span class="line">                    <span class="comment">//.permission(Permission.SYSTEM_ALERT_WINDOW, Permission.REQUEST_INSTALL_PACKAGES) //支持请求6.0悬浮窗权限8.0请求安装权限</span></span><br><span class="line">                    .permission(Permission.WRITE_EXTERNAL_STORAGE,Permission.CAMERA,Permission.READ_EXTERNAL_STORAGE ) <span class="comment">//不指定权限则自动获取清单中的危险权限</span></span><br><span class="line">                    .request(<span class="keyword">new</span> OnPermission() &#123;</span><br><span class="line"></span><br><span class="line">                        <span class="meta">@Override</span></span><br><span class="line">                        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">hasPermission</span><span class="params">(List&lt;String&gt; granted, <span class="keyword">boolean</span> isAll)</span> </span>&#123;</span><br><span class="line">                            Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"权限申请成功！"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="meta">@Override</span></span><br><span class="line">                        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">noPermission</span><span class="params">(List&lt;String&gt; denied, <span class="keyword">boolean</span> quick)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//    通过AlertDialog.Builder这个类来实例化我们的一个AlertDialog的对象</span></span><br><span class="line">            AlertDialog.Builder builder = <span class="keyword">new</span> AlertDialog.Builder(MainActivity.<span class="keyword">this</span>);</span><br><span class="line">            <span class="comment">//    设置Title的内容</span></span><br><span class="line">            builder.setTitle(<span class="string">"设置头像"</span>);</span><br><span class="line">            <span class="comment">//    设置Content来显示一个信息</span></span><br><span class="line">            builder.setMessage(<span class="string">"设置自己的头像"</span>);</span><br><span class="line">            <span class="comment">//    设置一个PositiveButton</span></span><br><span class="line">            builder.setPositiveButton(<span class="string">"本地图片"</span>, <span class="keyword">new</span> DialogInterface.OnClickListener() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> which)</span> </span>&#123;</span><br><span class="line">                    Intent intent = <span class="keyword">new</span> Intent(</span><br><span class="line">                            Intent.ACTION_GET_CONTENT);</span><br><span class="line">                    <span class="keyword">if</span> (Build.VERSION.SDK_INT &lt; <span class="number">19</span>) &#123;</span><br><span class="line">                        intent.setType(<span class="string">"image/*"</span>);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        intent = <span class="keyword">new</span> Intent(Intent.ACTION_PICK, android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI);</span><br><span class="line">                    &#125;</span><br><span class="line">                    startActivityForResult(intent, CHOOSE_PICTURE);</span><br><span class="line">                    dialog.dismiss();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="comment">//    设置一个NegativeButton</span></span><br><span class="line">            builder.setNegativeButton(<span class="string">"拍照"</span>, <span class="keyword">new</span> DialogInterface.OnClickListener() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> which)</span> </span>&#123;</span><br><span class="line">                    Intent intent = <span class="keyword">new</span> Intent(MediaStore.ACTION_IMAGE_CAPTURE);</span><br><span class="line">                    <span class="keyword">if</span> (hasSdcard()) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (hasSdcard()) &#123;</span><br><span class="line">                            intent.putExtra(MediaStore.EXTRA_OUTPUT, Uri.fromFile(<span class="keyword">new</span> File(Environment</span><br><span class="line">                                    .getExternalStorageDirectory(), IMAGE_FILE_NAME)));</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    startActivityForResult(intent, TAKE_PICTURE);</span><br><span class="line">                    dialog.dismiss();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="comment">//    设置一个NeutralButton</span></span><br><span class="line">            builder.setNeutralButton(<span class="string">"取消"</span>, <span class="keyword">new</span> DialogInterface.OnClickListener() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> which)</span> </span>&#123;</span><br><span class="line">                    Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"neutral: "</span> + which, Toast.LENGTH_SHORT).show();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="comment">//    显示出该对话框</span></span><br><span class="line">            builder.show();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onActivityResult</span><span class="params">(<span class="keyword">int</span> requestCode, <span class="keyword">int</span> resultCode, @Nullable Intent data)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onActivityResult(requestCode, resultCode, data);</span><br><span class="line">        <span class="keyword">if</span> (resultCode == RESULT_OK) &#123; <span class="comment">// 如果返回码是可以用的</span></span><br><span class="line">            <span class="keyword">switch</span> (requestCode) &#123;</span><br><span class="line">                <span class="keyword">case</span> TAKE_PICTURE:</span><br><span class="line">                    <span class="keyword">if</span> (hasSdcard()) &#123;</span><br><span class="line">                        File tempFile = <span class="keyword">new</span> File(</span><br><span class="line">                                Environment.getExternalStorageDirectory(),</span><br><span class="line">                                IMAGE_FILE_NAME);</span><br><span class="line">                        startPhotoZoom(Uri.fromFile(tempFile));</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        Toast.makeText(getApplication(), <span class="string">"没有SDCard!"</span>, Toast.LENGTH_LONG)</span><br><span class="line">                                .show();</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="comment">// 开始对图片进行裁剪处理</span></span><br><span class="line">                <span class="keyword">case</span> CHOOSE_PICTURE:</span><br><span class="line">                    startPhotoZoom(data.getData());</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="comment">//提交网络图片</span></span><br><span class="line">                <span class="keyword">case</span> CROP_SMALL_PICTURE:</span><br><span class="line">                    <span class="keyword">if</span> (data != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        <span class="comment">/*setImageToView(data); // 让刚才选择裁剪得到的图片显示在界面上*/</span></span><br><span class="line">                        sendImageByNet(data);</span><br><span class="line">                        <span class="comment">//savePhoto(data);</span></span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取本地加载的</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">sendImageByNet</span><span class="params">(Intent data)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (data != <span class="keyword">null</span>) &#123;</span><br><span class="line">            Bitmap bitmap = data.getParcelableExtra(<span class="string">"data"</span>);</span><br><span class="line">            avatar.setImageBitmap(bitmap);</span><br><span class="line">            <span class="comment">//提交图片到服务器  base64  或者  bitmap 提交文件</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 裁剪图片方法实现</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> uri</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">/*裁剪图片*/</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">startPhotoZoom</span><span class="params">(Uri uri)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (uri == <span class="keyword">null</span>) &#123;</span><br><span class="line">            Log.i(<span class="string">"tag"</span>, <span class="string">"The uri is not exist."</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        tempUri = uri;</span><br><span class="line">        Intent intent = <span class="keyword">new</span> Intent(<span class="string">"com.android.camera.action.CROP"</span>);</span><br><span class="line">        <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.KITKAT) &#123;</span><br><span class="line">            File uriFile = <span class="keyword">new</span> File(FileImageUtil.getPath(<span class="keyword">this</span>, tempUri));</span><br><span class="line">            intent.setDataAndType(Uri.fromFile(uriFile), <span class="string">"image/*"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            intent.setDataAndType(tempUri, <span class="string">"image/*"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// crop为true是设置在开启的intent中设置显示的view可以剪裁</span></span><br><span class="line">        intent.putExtra(<span class="string">"crop"</span>, <span class="keyword">true</span>);</span><br><span class="line"><span class="comment">//        intent.putExtra("scale", true);</span></span><br><span class="line">        <span class="comment">// aspectX aspectY 是宽高的比例</span></span><br><span class="line">        intent.putExtra(<span class="string">"aspectX"</span>, <span class="number">1</span>);</span><br><span class="line">        intent.putExtra(<span class="string">"aspectY"</span>, <span class="number">1</span>);</span><br><span class="line">        <span class="comment">// outputX,outputY 是剪裁图片的宽高</span></span><br><span class="line">        intent.putExtra(<span class="string">"outputX"</span>, <span class="number">200</span>);</span><br><span class="line">        intent.putExtra(<span class="string">"outputY"</span>, <span class="number">150</span>);</span><br><span class="line">        intent.putExtra(<span class="string">"return-data"</span>, <span class="keyword">true</span>);</span><br><span class="line">        startActivityForResult(intent, CROP_SMALL_PICTURE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 检查设备是否存在SDCard的工具方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">hasSdcard</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String state = Environment.getExternalStorageState();</span><br><span class="line">        <span class="keyword">if</span> (state.equals(Environment.MEDIA_MOUNTED)) &#123;</span><br><span class="line">            <span class="comment">// 有存储的SDCard</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//findViewById </span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initView</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        avatar = (ImageView) findViewById(R.id.avatar);</span><br><span class="line">        update = (Button) findViewById(R.id.update);</span><br><span class="line">        update.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (v.getId()) &#123;</span><br><span class="line">            <span class="keyword">case</span> R.id.update:</span><br><span class="line">                getPermission();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>时间工具类</title>
      <link href="/2019/01/04/%E6%97%B6%E9%97%B4%E5%B7%A5%E5%85%B7%E7%B1%BB/"/>
      <url>/2019/01/04/%E6%97%B6%E9%97%B4%E5%B7%A5%E5%85%B7%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<p>这段时间在公司中做公司的项目，期间用了时间相关处理类，但是一直都是东写一点西写一点，算了找个时间来写一个关于时间的工具类，以便于以后直接调用（写的不好勿喷，谢谢）。</p><p>附上我的工具类的地址–&gt;<a href="https://github.com/Lucas-Liang/ToolPackage/blob/master/src/Time/TimeUtils.java" target="_blank" rel="noopener">TiemUtils</a> (随缘更新)</p><p>java.util 包提供了 Date 类来封装当前的日期和时间。 Date 类提供两个构造函数来实例化 Date 对象。</p><h2 id="不同类型的时间-相互转化"><a href="#不同类型的时间-相互转化" class="headerlink" title="不同类型的时间 相互转化"></a>不同类型的时间 相互转化</h2><p>主要是<code>Data</code>、<code>long</code> 、<code>String</code> 之间的转化</p><h3 id="转换为String类型"><a href="#转换为String类型" class="headerlink" title="转换为String类型"></a>转换为String类型</h3><h4 id="date类型转换为String类型"><a href="#date类型转换为String类型" class="headerlink" title="date类型转换为String类型"></a><code>date</code>类型转换为<code>String</code>类型</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">longToString</span><span class="params">(<span class="keyword">long</span> currentTime, String formatType)</span></span></span><br><span class="line"><span class="function">        <span class="keyword">throws</span> ParseException </span>&#123;</span><br><span class="line">    Date date = longToDate(currentTime, formatType);</span><br><span class="line">    String strTime = dateToString(date, formatType);</span><br><span class="line">    <span class="keyword">return</span> strTime;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="long类型转换为String类型"><a href="#long类型转换为String类型" class="headerlink" title="long类型转换为String类型"></a><code>long</code>类型转换为<code>String</code>类型</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">longToString</span><span class="params">(<span class="keyword">long</span> currentTime, String formatType)</span></span></span><br><span class="line"><span class="function">        <span class="keyword">throws</span> ParseException </span>&#123;</span><br><span class="line">    Date date = longToDate(currentTime, formatType);</span><br><span class="line">    String strTime = dateToString(date, formatType);</span><br><span class="line">    <span class="keyword">return</span> strTime;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="转换为date类型"><a href="#转换为date类型" class="headerlink" title="转换为date类型"></a>转换为<code>date</code>类型</h3><h4 id="string类型转换为date类型"><a href="#string类型转换为date类型" class="headerlink" title="string类型转换为date类型"></a><code>string</code>类型转换为<code>date</code>类型</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Date <span class="title">stringToDate</span><span class="params">(String strTime, String formatType)</span></span></span><br><span class="line"><span class="function">        <span class="keyword">throws</span> ParseException </span>&#123;</span><br><span class="line">    SimpleDateFormat formatter = <span class="keyword">new</span> SimpleDateFormat(formatType);</span><br><span class="line">    Date date = <span class="keyword">null</span>;</span><br><span class="line">    date = formatter.parse(strTime);</span><br><span class="line">    <span class="keyword">return</span> date;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="long转换为Date类型"><a href="#long转换为Date类型" class="headerlink" title="long转换为Date类型"></a><code>long</code>转换为<code>Date</code>类型</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Date <span class="title">longToDate</span><span class="params">(<span class="keyword">long</span> currentTime, String formatType)</span></span></span><br><span class="line"><span class="function">        <span class="keyword">throws</span> ParseException </span>&#123;</span><br><span class="line">    Date dateOld = <span class="keyword">new</span> Date(currentTime);</span><br><span class="line">    String sDateTime = dateToString(dateOld, formatType);</span><br><span class="line">    Date date = stringToDate(sDateTime, formatType);</span><br><span class="line">    <span class="keyword">return</span> date;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="转换为long类型"><a href="#转换为long类型" class="headerlink" title="转换为long类型"></a>转换为<code>long</code>类型</h3><h4 id="string类型转换为long类型"><a href="#string类型转换为long类型" class="headerlink" title="string类型转换为long类型"></a><code>string</code>类型转换为<code>long</code>类型</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">long</span> <span class="title">stringToLong</span><span class="params">(String strTime, String formatType)</span></span></span><br><span class="line"><span class="function">        <span class="keyword">throws</span> ParseException </span>&#123;</span><br><span class="line">    Date date = stringToDate(strTime, formatType);</span><br><span class="line">    <span class="keyword">if</span> (date == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">long</span> currentTime = dateToLong(date);</span><br><span class="line">        <span class="keyword">return</span> currentTime;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="date类型转换为long类型"><a href="#date类型转换为long类型" class="headerlink" title="date类型转换为long类型"></a><code>date</code>类型转换为<code>long</code>类型</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">long</span> <span class="title">dateToLong</span><span class="params">(Date date)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> date.getTime();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来就是一些常见对于时间的操作</p><h2 id="返回String类型的时间字符串"><a href="#返回String类型的时间字符串" class="headerlink" title="返回String类型的时间字符串"></a>返回<code>String</code>类型的时间字符串</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getCurrentTimeStr</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> getCurrentTimeStr(<span class="string">"yyyy-MM-dd HH:mm:ss"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getCurrentTimeYear</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> getCurrentTimeStr(<span class="string">"yyyy-MM-dd"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getCurrentTimeStrHour</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> getCurrentTimeStr(<span class="string">"HH:mm:ss"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getCurrentTimeStr</span><span class="params">(String custom)</span> </span>&#123;</span><br><span class="line">    Calendar curCalendar = Calendar.getInstance();</span><br><span class="line">    DateFormat df = <span class="keyword">new</span> SimpleDateFormat(custom);</span><br><span class="line">    <span class="keyword">return</span> df.format(curCalendar.getTime());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="将时间戳转成格式化时间返回String"><a href="#将时间戳转成格式化时间返回String" class="headerlink" title="将时间戳转成格式化时间返回String"></a>将时间戳转成格式化时间返回<code>String</code></h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getFormatTime</span><span class="params">(<span class="keyword">long</span> milliseconds)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> getFormatTime(milliseconds,<span class="string">"yyyy-MM-dd HH:mm:ss"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getFormatTimeYear</span><span class="params">(<span class="keyword">long</span> milliseconds)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> getFormatTime(milliseconds,<span class="string">"yyyy-MM-dd"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getFormatTimeHour</span><span class="params">(<span class="keyword">long</span> milliseconds)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> getFormatTime(milliseconds,<span class="string">"HH:mm:ss"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getFormatTime</span><span class="params">(<span class="keyword">long</span> milliseconds,String custom)</span> </span>&#123;</span><br><span class="line">    SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(custom);</span><br><span class="line">    <span class="keyword">return</span> sdf.format(<span class="keyword">new</span> Date(milliseconds));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="返回文字描述的日期"><a href="#返回文字描述的日期" class="headerlink" title="返回文字描述的日期"></a>返回文字描述的日期</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getTimeFormatText</span><span class="params">(<span class="keyword">long</span> date)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (date == <span class="number">0</span>) <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">    date = date * <span class="number">1000</span>;</span><br><span class="line">    <span class="keyword">long</span> diff = <span class="keyword">new</span> Date().getTime() - date;</span><br><span class="line">    <span class="keyword">long</span> r = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (diff &gt; year) &#123; r = (diff / year); <span class="keyword">return</span> r + <span class="string">"年前"</span>; &#125;</span><br><span class="line">    <span class="keyword">if</span> (diff &gt; month) &#123; r = (diff / month);<span class="keyword">return</span> r + <span class="string">"月前"</span>; &#125;</span><br><span class="line">    <span class="keyword">if</span> (diff &gt; day) &#123; r = (diff / day);<span class="keyword">return</span> r + <span class="string">"天前"</span>; &#125;</span><br><span class="line">    <span class="keyword">if</span> (diff &gt; hour) &#123; r = (diff / hour);<span class="keyword">return</span> r + <span class="string">"小时前"</span>; &#125;</span><br><span class="line">    <span class="keyword">if</span> (diff &gt; minute) &#123; r = (diff / minute);<span class="keyword">return</span> r + <span class="string">"分钟前"</span>; &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"刚刚"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="计算两个日期之间相差的天数"><a href="#计算两个日期之间相差的天数" class="headerlink" title="计算两个日期之间相差的天数"></a>计算两个日期之间相差的天数</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">daysBetween</span><span class="params">(Date date1, Date date2)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">boolean</span> result = date1.before(date2);<span class="comment">//对比时间的前后</span></span><br><span class="line">    Date sdate,bdate;</span><br><span class="line">    <span class="keyword">if</span>(result==<span class="keyword">true</span>)&#123;</span><br><span class="line">        sdate = date2;bdate = date1;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        sdate = date1;bdate = date2;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> days = (<span class="keyword">int</span>) ((sdate.getTime() - bdate.getTime()) / (<span class="number">1000</span>*<span class="number">3600</span>*<span class="number">24</span>));</span><br><span class="line">    <span class="keyword">return</span> days;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="获取分秒格式化字符串"><a href="#获取分秒格式化字符串" class="headerlink" title="获取分秒格式化字符串"></a>获取分秒格式化字符串</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getFormatMiniteSecString</span><span class="params">(<span class="keyword">int</span> time)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> second = time % <span class="number">60</span>;</span><br><span class="line">    <span class="keyword">int</span> minute = time / <span class="number">60</span>;</span><br><span class="line">    <span class="keyword">int</span> hour = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (minute &gt;= <span class="number">60</span>) &#123;</span><br><span class="line">        hour = minute / <span class="number">60</span>;</span><br><span class="line">        minute = minute % <span class="number">60</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    String timeString = <span class="string">""</span>;</span><br><span class="line">    String secondString = <span class="string">""</span>;</span><br><span class="line">    String minuteString = <span class="string">""</span>;</span><br><span class="line">    String hourString = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">if</span> (second &lt; <span class="number">10</span>) &#123;</span><br><span class="line">        secondString = <span class="string">"0"</span> + second;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        secondString = second + <span class="string">""</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (minute &lt; <span class="number">10</span>) &#123;</span><br><span class="line">        minuteString = <span class="string">"0"</span> + minute;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        minuteString = minute + <span class="string">""</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (hour &lt; <span class="number">10</span>) &#123;</span><br><span class="line">        hourString = <span class="string">"0"</span> + hour;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        hourString = hour + <span class="string">""</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (hour != <span class="number">0</span>) &#123;</span><br><span class="line">        timeString = hourString + <span class="string">":"</span> + minuteString + <span class="string">":"</span> + secondString;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        timeString = minuteString + <span class="string">":"</span> + secondString;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> timeString;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>##判断选择的日期</p><h3 id="判断选择的日期是否是本月"><a href="#判断选择的日期是否是本月" class="headerlink" title="判断选择的日期是否是本月"></a>判断选择的日期是否是本月</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isThisMonth</span><span class="params">(<span class="keyword">long</span> time)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> isThisTime(time,<span class="string">"yyyy-MM"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="判断选择的日期是否是本周"><a href="#判断选择的日期是否是本周" class="headerlink" title="判断选择的日期是否是本周"></a>判断选择的日期是否是本周</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isThisWeek</span><span class="params">(<span class="keyword">long</span> time)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Calendar calendar = Calendar.getInstance();</span><br><span class="line">    <span class="keyword">int</span> currentWeek = calendar.get(Calendar.WEEK_OF_YEAR);</span><br><span class="line">    calendar.setTime(<span class="keyword">new</span> Date(time));</span><br><span class="line">    <span class="keyword">int</span> paramWeek = calendar.get(Calendar.WEEK_OF_YEAR);</span><br><span class="line">    <span class="keyword">if</span>(paramWeek==currentWeek) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="判断选择的日期是否是今天"><a href="#判断选择的日期是否是今天" class="headerlink" title="判断选择的日期是否是今天"></a>判断选择的日期是否是今天</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isToday</span><span class="params">(<span class="keyword">long</span> time)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> isThisTime(time,<span class="string">"yyyy-MM-dd"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="处理时间对比的类"><a href="#处理时间对比的类" class="headerlink" title="处理时间对比的类"></a>处理时间对比的类</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isThisTime</span><span class="params">(<span class="keyword">long</span> time,String pattern)</span> </span>&#123;</span><br><span class="line">    Date date = <span class="keyword">new</span> Date(time);</span><br><span class="line">    SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(pattern);</span><br><span class="line">    String param = sdf.format(date);<span class="comment">//参数时间</span></span><br><span class="line">    String now = sdf.format(<span class="keyword">new</span> Date());<span class="comment">//当前时间</span></span><br><span class="line">    <span class="keyword">if</span>(param.equals(now)) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="判断当前时间是否在-startTime-endTime-区间，注意时间格式要一致"><a href="#判断当前时间是否在-startTime-endTime-区间，注意时间格式要一致" class="headerlink" title="判断当前时间是否在[startTime, endTime]区间，注意时间格式要一致"></a>判断当前时间是否在[startTime, endTime]区间，注意时间格式要一致</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isEffectiveDate</span><span class="params">(Date nowTime, Date startTime, Date endTime)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (nowTime.getTime() == startTime.getTime() || nowTime.getTime() == endTime.getTime())</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">if</span> (nowTime.after(startTime) &amp;&amp; nowTime.before(endTime)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后可能想到什么更新什么、看具体遇见的需求，有更新的我会在更新的</p><blockquote><p>最后更新时间2018-12-31 12:00:00</p></blockquote><blockquote><p>我在网上写的文章、项目都可以转载，但请注明出处，这是我唯一的要求。当然纯我个人原创的成果被转载了，不注明出处也是没有关系的，但是由我转载或者借鉴了别人的成果的请注明他人的出处，算是对前辈们的一种尊重吧！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 工具类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> 工具类 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>你好世界</title>
      <link href="/2018/12/31/%E4%BD%A0%E5%A5%BD%EF%BC%8C%E4%B8%96%E7%95%8C/"/>
      <url>/2018/12/31/%E4%BD%A0%E5%A5%BD%EF%BC%8C%E4%B8%96%E7%95%8C/</url>
      
        <content type="html"><![CDATA[<h2 id="你好世界"><a href="#你好世界" class="headerlink" title="你好世界"></a>你好世界</h2><p>Hello world！这是我在Wordpress上第二次发布这个信息了。</p><p>第一次是在本地机器上，这次是真正在网站上发布了。</p><meta http-equiv="refresh" content="0.1">]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
